version: "3.3" 
services:
  app:
    build: 
      context: ${APP_FOLDER}
      dockerfile: Dockerfile
      args:
        - PORT=3000
    entrypoint: npm
    command: start
    container_name: gitter-app
    ports:
      - "3000:3000"
    networks:
      - "frontend"
    environment:
      - SOCIAL_API_HOST=social-api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./app:/app
      - /app/node_modules
      - ./configs/gitter-app/keycloak.json:/app/public/keycloak.json

  code-api:
    build: 
      context: ${CODE_API_FOLDER}
      dockerfile: Dockerfile
      args:
        - PORT=3000
    entrypoint: "ts-node-dev"
    command: 
      - --respawn
      - main.ts
    container_name: code-api
    ports:
      - "3001:3000"
    networks:
      - "backend"
    environment:
      - OPENFAAS_URL=<to_set>
      - OPENFAAS_USER=admin
      - OPENFAAS_PASSWORD=<to_set>
      - MINIO_HOST=http://dev.gitter.uk/minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minio_admin
      - MINIO_SECRET_KEY=minio1234
    volumes:
      - ./code-api:/app
      - /app/node_modules
  minio:
    image: quay.io/minio/minio
    command: server --console-address ":9001" /data
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./data/minio:/data

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm.json
      SOCIAL_API_URL: http://social-api:8081
    volumes:
      - ./keycloak-event-listener/target/keycloak-event-listener-0.0.1.jar:/opt/jboss/keycloak/standalone/deployments/keycloak-event-listener-0.0.1.jar
      - ./configs/keycloak/realm.json:/opt/jboss/keycloak/imports/realm.json
    depends_on:
      - keycloak-db
    networks:
      - "backend"
    ports:
      - 8080:8080
    extra_hosts:
      - host.docker.internal:host-gateway

  keycloak-db:
    image: postgres
    restart: on-failure
    container_name: keycloak-db
    hostname: keycloak-db 
    networks:
      - "backend"
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloak
    volumes:
      - ./data/keycloak:/var/lib/postgresql/data

  social-api:
    build: 
      context: ${SOCIAL_API_FOLDER}
      dockerfile: Dockerfile
    container_name: social-api
    ports:
      - "3002:8081"
    networks:
      - "backend"
      - "frontend"
    depends_on:
      - social-db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - APPLICATION_URL=http://localhost:8081
      - KEYCLOAK_REALM_NAME=gitter
      - KEYCLOAK_SERVER_URL=http://keycloak:8080/auth
      - KEYCLOAK_CLIENT_ID=social-api
      - KEYCLOAK_CLIENT_SECRET=mNYslEw3SyItrGaytdxY5LFxIH42ACgc
      - SERVER_PORT=8081
    volumes:
      - ./social-api:/app

  social-db:
    image: postgres
    restart: on-failure
    container_name: social-db
    hostname:  ${DATABASE_HOSTNAME}
    networks:
      - "backend"
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ./data/social:/var/lib/postgresql/data

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
  backend:
    driver: bridge
    ipam:
      driver: default

