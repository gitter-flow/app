version: "3.3" 
services:
  traefik:
    image: "traefik:v2.7"
    container_name: "traefik"
    networks:
      - backend
      - frontend
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8082:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  app:
    build: 
      context: ${APP_FOLDER}
      dockerfile: Dockerfile
      args:
        - PORT=3000
    entrypoint: npm
    command: start
    container_name: gitter-app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitter-app.rule=Host(`app.gitter.localhost`)"
      - "traefik.http.routers.gitter-app.entrypoints=web"
    ports:
      - "3000:3000"
    networks:
      - frontend
    environment:
      - SOCIAL_API_HOST=social-api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./app:/app
      - /app/node_modules
      - ./configs/gitter-app/keycloak.json:/app/public/keycloak.json

  code-api:
    build: 
      context: ${CODE_API_FOLDER}
      dockerfile: Dockerfile
      args:
        - PORT=3000
    entrypoint: "ts-node-dev"
    command: 
      - --respawn
      - main.ts
    container_name: code-api
    ports:
      - "3001:3000"
    networks:
      - "backend"
    environment:
      - OPENFAAS_URL=<to_set>
      - OPENFAAS_USER=admin
      - OPENFAAS_PASSWORD=<to_set>
      - MINIO_HOST=http://dev.gitter.uk/minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minio_admin
      - MINIO_SECRET_KEY=minio1234
    volumes:
      - ./code-api:/app
      - /app/node_modules
  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server --console-address ":9001" /data
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./data/minio:/data

  keycloak:
    build:
      context: keycloak
    container_name: keycloak
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`api.gitter.localhost`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
    command: 
      - 'start-dev'
      - '--log-level=debug'
      - '--http-port=8080'
      - '--http-relative-path=/auth'
      - '--http-enabled=true'
      - '--hostname-strict-https=false'
      - '--hostname-strict=false'
      - '--db=postgres'
      - '--db-url=jdbc:postgresql://keycloak-db/keycloak'
      - '--db-username=keycloak'
      - '--db-password=password'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      SOCIAL_API_URL: http://social-api:8081
      PROXY_ADDRESS_FORWARDING: true
      KEYCLOAK_FRONTEND_URL: http://gitter.localhost/auth
    volumes:
      - ./keycloak-event-listener/target/keycloak-event-listener-0.0.1.jar:/opt/jboss/keycloak/standalone/deployments/keycloak-event-listener-0.0.1.jar
      - ./keycloak/realm.json:/opt/keycloak_import/realm.json
    depends_on:
      - keycloak-db
    networks:
      - backend
    ports:
      - 8080:8080

  keycloak-db:
    image: postgres
    restart: on-failure
    container_name: keycloak-db
    hostname: keycloak-db 
    networks:
      - backend
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloak
    volumes:
      - ./data/keycloak:/var/lib/postgresql/data

  social-api:
    build: 
      context: ${SOCIAL_API_FOLDER}
      dockerfile: Dockerfile
    container_name: social-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.social-api.rule=Host(`api.gitter.localhost`)"
      - "traefik.http.routers.social-api.entrypoints=web"
    ports:
      - "3002:8081"
    networks:
      - backend
      - frontend
    depends_on:
      - social-db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - APPLICATION_URL=http://localhost:3002
      - KEYCLOAK_REALM_NAME=gitter
      - KEYCLOAK_SERVER_URL=http://keycloak:8080/auth
      - KEYCLOAK_CLIENT_ID=api-social
      - KEYCLOAK_CLIENT_SECRET=h8lCO4plzKFfsong2crbHl7y1fhCykpl
      - SERVER_PORT=8081
      - LOG_LEVEL=DEBUG
    volumes:
      - ./social-api:/app
      
  social-db:
    image: postgres
    restart: on-failure
    container_name: social-db
    hostname:  ${DATABASE_HOSTNAME}
    networks:
      - "backend"
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ./data/social:/var/lib/postgresql/data

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
  backend:
    driver: bridge
